#!/usr/bin/php
<?php
/**
* ContentCleanup
*
* @version $Id$
* @package JoomlaCliTools
* @subpackage ContentCleanup
* @copyright Copyright 2004 - 2013 Matias Aguirre. All rights reserved.
* @license GNU General Public License version 2 or later.
* @author Matias Aguirre <maguirre@matware.com.ar>
* @link http://www.matware.com.ar
*/
// We are a valid Joomla entry point.
define('_JEXEC', 1);

// Setup the base path related constant.
define('JPATH_BASE', dirname(__FILE__));

// Bootstrap the application.
require dirname(dirname(__FILE__)).'/bootstrap.php';

/**
 * This class checks some common situations that occur when the asset table is corrupted.
 */
// Instantiate the application.
class ContentCleanup extends JApplicationCli
{
	/**
	* Ascii color array
	*
	* @var array
	* @since 1.0
	*/
	public $_c = array(
		'LIGHT_RED'   => "\033[1;31m",
		'LIGHT_GREEN' => "\033[1;32m",
		'YELLOW'      => "\033[1;33m",
		'LIGHT_BLUE'  => "\033[1;34m",
		'MAGENTA'     => "\033[1;35m",
		'LIGHT_CYAN'  => "\033[1;36m",
		'WHITE'       => "\033[1;37m",
		'NORMAL'      => "\033[0m",
		'BLACK'       => "\033[0;30m",
		'RED'         => "\033[0;31m",
		'GREEN'       => "\033[0;32m",
		'BROWN'       => "\033[0;33m",
		'BLUE'        => "\033[0;34m",
		'CYAN'        => "\033[0;36m",
		'BOLD'        => "\033[1m",
		'UNDERSCORE'  => "\033[4m",
		'REVERSE'     => "\033[7m",
	);

	/**
	 * Overrides the parent doExecute method to run the web application.
	 *
	 * This method should include your custom code that runs the application.
	 *
	 * @return  void
	 *
	 * @since   11.3
	 */

	public function __construct()
	{
		// Call the parent __construct method so it bootstraps the application class.
		parent::__construct();
	
		// Getting the parameters
		$this->params = new JRegistry(new JConfig);

		// Creating first dabatase instance
		$this->_db = JFactory::getDBO();
	}

	protected function doExecute()
	{
		// Fixing categories assets
		$query = $this->_db->getQuery(true);
		$query->select('id');
		$query->from('#__content');
		$query->where("created_by = 42");
		$this->_db->setQuery($query);
		$contents = $this->_db->loadAssocList();

		// Include the content table path
		JTable::addIncludePath(JPATH_LIBRARIES . '/legacy/table/');

		// Write title to buffer
		$this->out("{$this->_c['WHITE']}-------------------------------------------------------------------------------------------------");
		$this->out("{$this->_c['WHITE']}|  {$this->_c['BLUE']}	Deleting the content");
		$this->out("{$this->_c['WHITE']}-------------------------------------------------------------------------------------------------");
		echo "{$this->_c['WHITE']}|  {$this->_c['RED']}[{$this->_c['YELLOW']}";

		// Deleting
		foreach ($contents as $content)
		{
				// Get the table
				$table = JTable::getInstance('Content', 'JTable');
				// Load it before delete. Joomla bug?
				$table->load($content['id']);
				// Delete
				$table->delete($content['id']);
				// Write to buffer
				echo "Ë•";
				// Free
				unset($table);
		}

		// Closing buffer
		$this->out( "{$this->_c['RED']}]" );
	}

} // end class

// Wrap the execution in a try statement to catch any exceptions thrown anywhere in the script.
try
{
	// Instantiate the application object, passing the class name to JCli::getInstance
	// and use chaining to execute the application.
	JApplicationCli::getInstance('ContentCleanup')->execute();
}
catch (Exception $e)
{
	// An exception has been caught, just echo the message.
	fwrite(STDOUT, $e->getMessage() . "\n");
	exit($e->getCode());
}
